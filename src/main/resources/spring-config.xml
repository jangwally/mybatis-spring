<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd
    ">


    <!-- 开启spring包扫描，controller注解的包 不扫描 这个交给springmvc扫描 -->
    <context:component-scan base-package="myloe">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 引入数据库配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties"/>

    <!-- 配置数据库 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 基本信息 -->
        <property name="jdbcUrl" value="${connection.mysql.url}"></property>
        <property name="driverClass" value="${connection.mysql.driver_class}"></property>
        <property name="user" value="${connection.mysql.username}"></property>
        <property name="password" value="${connection.mysql.password}"></property>
        <!-- 其他配置 -->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="3"></property>
        <!--连接池中保留的最小连接数。Default: 3 -->
        <property name="minPoolSize" value="3"></property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="5"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="3"></property>
        <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="8"></property>
        <!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
        <property name="maxStatementsPerConnection" value="5"></property>
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="1800"></property>
    </bean>

    <!-- 使用spring事务 来控制mybatis -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启事务注解扫描 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- spring 和mybatis 整合   基本上把mybatis核心配置文件 都在这里配置，相当于SqlSessionFactoryBean属性进行配置了-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 声明数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 声明mybaits 核心配置文件  这个可以不要，如果把配置全部通过property属性设置，就没必要声明配置文件在哪里了 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 声明sql映射文件,如果定义了mybatis核心配置文件并且里面也设置了映射文件扫描路径 这个就不需要了 -->
        <property name="mapperLocations" value="classpath*:mybatis-mapper/*.xml"/>
    </bean>

    <!-- 配置sqlsessionTemplate ，这里只使用到了批量处理 -->
    <bean id="SqlsessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <!-- 下面两个配置都是通过构造器赋值的 -->
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>

    <!--声明mapper接口，让spring可以自动注入， 这个是老版本用的-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="myloe.mapper"></property>
    </bean>

    <!-- 声明mapper接口，让spring可以自动注入， 这个是新版本用的 -->
    <!--<mybatis:scan base-package="myloe.mapperper" />-->

    <import resource="classpath:spring-redis.xml" />
</beans>